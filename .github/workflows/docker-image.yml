name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "password@12345#"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "curl -f http://localhost:1433 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.x' # Adjust this version based on your project

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Run unit tests
      env:
        ConnectionStrings__DefaultConnection: "Server=pokemon-db;Database=pokemon;User Id=sa;Password=password@12345#;"
      run: dotnet test PokemonWebApi.Unit.Tests/PokemonWebApi.Unit.Tests.csproj --no-build --verbosity normal

    - name: Run integration tests
      env:
        ConnectionStrings__DefaultConnection: "Server=pokemon-db;Database=pokemon;User Id=sa;Password=password@12345#;"
      run: dotnet test PokemonWebApi.Integration.Tests/PokemonWebApi.Integration.Tests.csproj --no-build --verbosity normal

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker images
      run: |
        docker build -t yourdockerhubusername/pokemon-webapi:latest .
        docker build -t yourdockerhubusername/pokemon-db:latest -f Dockerfile.db .

    - name: Push Docker images to Docker Hub
      run: |
        docker push yourdockerhubusername/pokemon-webapi:latest
        docker push yourdockerhubusername/pokemon-db:latest
